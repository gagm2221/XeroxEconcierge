package com.ecommerce.econcierge.jaxws;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.ecommerce.econcierge.cfg.AbstractJaxWs;
import com.ecommerce.econcierge.util.CfgCache;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.5-b01 Generated
 * source version: 2.2
 * 
 */
@WebServiceClient(name = "OrderEventServiceImplService", targetNamespace = "http://ws.order.esb.sdp.hcl.com/")
public class OrderEventServiceImplService extends AbstractJaxWs
{

	private final static URL ORDEREVENTSERVICEIMPLSERVICE_WSDL_LOCATION;
	private final static WebServiceException ORDEREVENTSERVICEIMPLSERVICE_EXCEPTION;
	private final static QName ORDEREVENTSERVICEIMPLSERVICE_QNAME = new QName("http://ws.order.esb.sdp.hcl.com/", "OrderEventServiceImplService");

	static
	{
		URL url = null;
		WebServiceException e = null;
		try
		{
			String wsdlLocation = CfgCache.xerox.wsdlLocation();
			url = new URL(wsdlLocation);
		} catch (MalformedURLException ex)
		{
			e = new WebServiceException(ex);
		}
		ORDEREVENTSERVICEIMPLSERVICE_WSDL_LOCATION = url;
		ORDEREVENTSERVICEIMPLSERVICE_EXCEPTION = e;
	}

	public OrderEventServiceImplService()
	{
		super(__getWsdlLocation(), ORDEREVENTSERVICEIMPLSERVICE_QNAME);
	}

	public OrderEventServiceImplService(String username, String password, boolean isPasswordDisget)
	{
		super(__getWsdlLocation(), ORDEREVENTSERVICEIMPLSERVICE_QNAME);
		this.setHandlerResolver(username, password, isPasswordDisget);
	}

	/**
	 * 
	 * @return returns OrderEventService
	 */
	@WebEndpoint(name = "OrderEventServicePort")
	public OrderEventService getOrderEventServicePort()
	{
		return this.getPort(new QName("http://ws.order.esb.sdp.hcl.com/", "OrderEventServicePort"), OrderEventService.class);
	}

	/**
	 * 
	 * @param features
	 *           A list of {@link javax.xml.ws.WebServiceFeature} to configure on
	 *           the proxy. Supported features not in the <code>features</code>
	 *           parameter will have their default values.
	 * @return returns OrderEventService
	 */
	@WebEndpoint(name = "OrderEventServicePort")
	public OrderEventService getOrderEventServicePort(WebServiceFeature... features)
	{
		return this.getPort(new QName("http://ws.order.esb.sdp.hcl.com/", "OrderEventServicePort"), OrderEventService.class, features);
	}

	private static URL __getWsdlLocation()
	{
		if (ORDEREVENTSERVICEIMPLSERVICE_EXCEPTION != null)
		{
			throw ORDEREVENTSERVICEIMPLSERVICE_EXCEPTION;
		}
		return ORDEREVENTSERVICEIMPLSERVICE_WSDL_LOCATION;
	}
}
